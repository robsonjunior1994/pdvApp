@page "/clientes"
@using pdvApp.Helps
@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

<PageTitle>Lista de Clientes - Sistema PDV</PageTitle>

<div class="container-fluid">
    <!-- Header -->
    <div class="row bg-primary text-white py-3 shadow">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <button class="btn btn-outline-light btn-sm me-2" @onclick="VoltarParaHome">
                        <i class="bi bi-arrow-left"></i> Voltar
                    </button>
                    <h1 class="h3 mb-0 d-inline-block">
                        <i class="bi bi-people me-2"></i>Lista de Clientes
                    </h1>
                </div>
                <div>
                    <button class="btn btn-outline-light btn-sm me-2" @onclick="NavigateToCadastro">
                        <i class="bi bi-person-plus"></i> Novo Cliente
                    </button>
                    <div class="btn-group">
                        <button class="btn btn-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-filter"></i> Filtrar
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" @onclick="() => FiltrarPorStatus(Enumeradores.Ativos.ToString())">Ativos</a></li>
                            <li><a class="dropdown-item" href="#" @onclick="() => FiltrarPorStatus(Enumeradores.Inativos.ToString())">Inativos</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#" @onclick="() => FiltrarPorTipo(Enumeradores.F.ToString())">Pessoa Física</a></li>
                            <li><a class="dropdown-item" href="#" @onclick="() => FiltrarPorTipo(Enumeradores.J.ToString())">Pessoa Jurídica</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#" @onclick="LimparFiltros">Todos</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtros e Busca -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Buscar por nome, CPF, email..." 
                                       @bind="termoBusca" @oninput="BuscarClientes" />
                                <button class="btn btn-outline-secondary" type="button" @onclick="LimparBusca">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" @bind="filtroCidade">
                                <option value="">Todas cidades</option>
                                @foreach (var cidade in cidades)
                                {
                                    <option value="@cidade">@cidade</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" @bind="ordenacao">
                                <option value="nome">Ordenar por Nome</option>
                                <option value="dataCadastro">Ordenar por Data Cadastro</option>
                                <option value="cidade">Ordenar por Cidade</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Estatísticas Rápidas -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6 col-md-3">
                            <div class="p-3">
                                <h3 class="text-primary mb-0">@clientes.Count</h3>
                                <p class="text-muted mb-0">Total de Clientes</p>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="p-3">
                                <h3 class="text-success mb-0">@clientes.Count(c => c.Ativo)</h3>
                                <p class="text-muted mb-0">Clientes Ativos</p>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="p-3">
                                <h3 class="text-info mb-0">@clientes.Count(c => c.TipoPessoa == "F")</h3>
                                <p class="text-muted mb-0">Pessoa Física</p>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="p-3">
                                <h3 class="text-warning mb-0">@clientes.Count(c => c.TipoPessoa == "J")</h3>
                                <p class="text-muted mb-0">Pessoa Jurídica</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabela de Clientes -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body p-0">
                    @if (clientesFiltrados.Count == 0)
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-people display-4 text-muted"></i>
                            <h5 class="text-muted mt-3">Nenhum cliente encontrado</h5>
                            <p class="text-muted">Tente ajustar os filtros ou cadastre um novo cliente.</p>
                            <button class="btn btn-primary mt-2" @onclick="NavigateToCadastro">
                                <i class="bi bi-person-plus"></i> Cadastrar Primeiro Cliente
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover table-striped mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Cliente</th>
                                        <th>Contato</th>
                                        <th>Localização</th>
                                        <th>Tipo</th>
                                        <th>Status</th>
                                        <th>Data Cadastro</th>
                                        <th width="120" class="text-center">Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var cliente in clientesFiltrados)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="flex-shrink-0">
                                                        <div class="bg-light rounded-circle d-flex align-items-center justify-content-center" 
                                                             style="width: 40px; height: 40px;">
                                                            <i class="bi bi-person text-muted"></i>
                                                        </div>
                                                    </div>
                                                    <div class="flex-grow-1 ms-3">
                                                        <h6 class="mb-0">@cliente.Nome</h6>
                                                        <small class="text-muted">@FormatarDocumento(cliente)</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <div>@cliente.Email</div>
                                                    <small class="text-muted">@cliente.Telefone</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <div>@cliente.Cidade</div>
                                                    <small class="text-muted">@cliente.Estado</small>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge @(cliente.TipoPessoa == "F" ? "bg-info" : "bg-warning")">
                                                    @(cliente.TipoPessoa == "F" ? "Pessoa Física" : "Pessoa Jurídica")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(cliente.Ativo ? "bg-success" : "bg-secondary")">
                                                    @(cliente.Ativo ? "Ativo" : "Inativo")
                                                </span>
                                            </td>
                                            <td>
                                                <small class="text-muted">@cliente.DataCadastro.ToString("dd/MM/yyyy")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button class="btn btn-outline-primary" @onclick="() => EditarCliente(cliente.Id)"
                                                            title="Editar cliente">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                    <button class="btn btn-outline-info" @onclick="() => VisualizarCliente(cliente.Id)"
                                                            title="Visualizar detalhes">
                                                        <i class="bi bi-eye"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" @onclick="() => ConfirmarExclusao(cliente)"
                                                            title="Excluir cliente">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Paginação -->
                        <div class="card-footer bg-light">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <span class="text-muted">
                                        Mostrando @clientesFiltrados.Count de @clientes.Count clientes
                                    </span>
                                </div>
                                <div>
                                    <nav>
                                        <ul class="pagination mb-0">
                                            <li class="page-item disabled">
                                                <a class="page-link" href="#">Anterior</a>
                                            </li>
                                            <li class="page-item active">
                                                <a class="page-link" href="#">1</a>
                                            </li>
                                            <li class="page-item">
                                                <a class="page-link" href="#">Próxima</a>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Confirmação de Exclusão -->
@if (clienteParaExcluir != null)
{
    <div class="modal fade show" style="display: block; background-color: rgba(0,0,0,0.5)" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Exclusão</h5>
                    <button type="button" class="btn-close" @onclick="CancelarExclusao"></button>
                </div>
                <div class="modal-body">
                    <p>Tem certeza que deseja excluir o cliente <strong>@clienteParaExcluir.Nome</strong>?</p>
                    <p class="text-danger">Esta ação não pode ser desfeita. Todas as vendas relacionadas serão mantidas.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelarExclusao">Cancelar</button>
                    <button type="button" class="btn btn-danger" @onclick="ExcluirCliente">Excluir</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Cliente> clientes = new();
    private List<Cliente> clientesFiltrados = new();
    private List<string> cidades = new();
    private string termoBusca = string.Empty;
    private string filtroCidade = string.Empty;
    private string ordenacao = "nome";
    private string filtroStatus = "todos";
    private string filtroTipo = "todos";
    private Cliente? clienteParaExcluir = null;

    protected override void OnInitialized()
    {
        CarregarClientes();
    }

    private void CarregarClientes()
    {
        // Dados de exemplo - em uma aplicação real, viria de uma API
        clientes = new List<Cliente>
        {
            new Cliente { Id = 1, Nome = "João Silva", CPF = "123.456.789-00", Email = "joao@email.com", Telefone = "(11) 99999-9999", 
                         Cidade = "São Paulo", Estado = "SP", TipoPessoa = "F", Ativo = true, DataCadastro = DateTime.Now.AddDays(-30) },
            new Cliente { Id = 2, Nome = "Maria Santos", CPF = "987.654.321-00", Email = "maria@email.com", Telefone = "(11) 98888-8888", 
                         Cidade = "Rio de Janeiro", Estado = "RJ", TipoPessoa = "F", Ativo = true, DataCadastro = DateTime.Now.AddDays(-15) },
            new Cliente { Id = 3, Nome = "Empresa ABC Ltda", CNPJ = "12.345.678/0001-90", Email = "contato@empresaabc.com", Telefone = "(11) 3777-7777", 
                         Cidade = "São Paulo", Estado = "SP", TipoPessoa = "J", Ativo = true, DataCadastro = DateTime.Now.AddDays(-10) },
            new Cliente { Id = 4, Nome = "Carlos Oliveira", CPF = "111.222.333-44", Email = "carlos@email.com", Telefone = "(11) 97777-7777", 
                         Cidade = "Belo Horizonte", Estado = "MG", TipoPessoa = "F", Ativo = false, DataCadastro = DateTime.Now.AddDays(-60) },
            new Cliente { Id = 5, Nome = "Comércio XYZ ME", CNPJ = "98.765.432/0001-10", Email = "vendas@xyz.com", Telefone = "(11) 3666-6666", 
                         Cidade = "Curitiba", Estado = "PR", TipoPessoa = "J", Ativo = true, DataCadastro = DateTime.Now.AddDays(-5) }
        };

        cidades = clientes.Select(c => c.Cidade).Distinct().ToList();
        FiltrarClientes();
    }

    private void FiltrarClientes()
    {
        clientesFiltrados = clientes;

        // Aplicar filtros
        if (!string.IsNullOrEmpty(termoBusca))
        {
            clientesFiltrados = clientesFiltrados.Where(c =>
                c.Nome.Contains(termoBusca, StringComparison.OrdinalIgnoreCase) ||
                c.CPF?.Contains(termoBusca, StringComparison.OrdinalIgnoreCase) == true ||
                c.CNPJ?.Contains(termoBusca, StringComparison.OrdinalIgnoreCase) == true ||
                c.Email.Contains(termoBusca, StringComparison.OrdinalIgnoreCase) ||
                c.Telefone.Contains(termoBusca, StringComparison.OrdinalIgnoreCase)
            ).ToList();
        }

        if (!string.IsNullOrEmpty(filtroCidade))
        {
            clientesFiltrados = clientesFiltrados.Where(c => c.Cidade == filtroCidade).ToList();
        }

        if (filtroStatus != "todos")
        {
            clientesFiltrados = clientesFiltrados.Where(c => c.Ativo == (filtroStatus == "ativos")).ToList();
        }

        if (filtroTipo != "todos")
        {
            clientesFiltrados = clientesFiltrados.Where(c => c.TipoPessoa == filtroTipo).ToList();
        }

        // Aplicar ordenação
        clientesFiltrados = ordenacao switch
        {
            "dataCadastro" => clientesFiltrados.OrderByDescending(c => c.DataCadastro).ToList(),
            "cidade" => clientesFiltrados.OrderBy(c => c.Cidade).ThenBy(c => c.Nome).ToList(),
            _ => clientesFiltrados.OrderBy(c => c.Nome).ToList()
        };
    }

    private void BuscarClientes()
    {
        FiltrarClientes();
    }

    private void LimparBusca()
    {
        termoBusca = string.Empty;
        FiltrarClientes();
    }

    private void FiltrarPorStatus(string status)
    {
        filtroStatus = status;
        FiltrarClientes();
    }

    private void FiltrarPorTipo(string tipo)
    {
        filtroTipo = tipo;
        FiltrarClientes();
    }

    private void LimparFiltros()
    {
        termoBusca = string.Empty;
        filtroCidade = string.Empty;
        filtroStatus = "todos";
        filtroTipo = "todos";
        ordenacao = "nome";
        FiltrarClientes();
    }

    private string FormatarDocumento(Cliente cliente)
    {
        return cliente.TipoPessoa == "F" ? cliente.CPF : cliente.CNPJ;
    }

    private void EditarCliente(int id)
    {
        Navigation.NavigateTo($"/clientes/editar/{id}");
    }

    private void VisualizarCliente(int id)
    {
        Navigation.NavigateTo($"/clientes/detalhes/{id}");
    }

    private void ConfirmarExclusao(Cliente cliente)
    {
        clienteParaExcluir = cliente;
    }

    private void CancelarExclusao()
    {
        clienteParaExcluir = null;
    }

    private void ExcluirCliente()
    {
        if (clienteParaExcluir != null)
        {
            clientes.Remove(clienteParaExcluir);
            clienteParaExcluir = null;
            FiltrarClientes();
        }
    }

    private void NavigateToCadastro()
    {
        Navigation.NavigateTo("/clientes/cadastrar");
    }

    private void VoltarParaHome()
    {
        Navigation.NavigateTo("/");
    }

    public class Cliente
    {
        public int Id { get; set; }
        public string Nome { get; set; } = string.Empty;
        public string? CPF { get; set; }
        public string? CNPJ { get; set; }
        public string Email { get; set; } = string.Empty;
        public string Telefone { get; set; } = string.Empty;
        public string Cidade { get; set; } = string.Empty;
        public string Estado { get; set; } = string.Empty;
        public string TipoPessoa { get; set; } = "F"; // F=Física, J=Jurídica
        public bool Ativo { get; set; } = true;
        public DateTime DataCadastro { get; set; } = DateTime.Now;
    }
}

<style>
    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05) !important;
        cursor: pointer;
    }
    
    .bg-primary { background-color: #0d6efd !important; }
    
    .btn-group .btn {
        border-radius: 0.25rem;
    }
    
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
    }
</style>